<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"

>

    <bean id="connectionMaker" class="connectionMaker.DConnectionMaker" />
    <!--
    <bean id="userService" class="aop.UserServiceTx">
        <property name="transactionManager" ref="transactionManager" />
        &lt;!&ndash;데코레이터&ndash;&gt;
        &lt;!&ndash;현재는  UesrService 타입을 오브젝트를 DI받아 트랜잭션을 경계설정 기능을 부여해준다&ndash;&gt;
        <property name="userService" ref="userServiceImpl" />
    </bean>
    -->
    <!--
    <bean id="userService" class="aop.TxProxyFactoryBean">
        <property name="target" ref="userServiceImpl" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="pattern" value="upgradeLevels" />
        <property name="serviceInterface" value="service.UserService" />
    </bean>
    -->
    <bean id="transactionAdvice" class="aop.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    <!--
    <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
        <property name="mappedName" value="upgrade*" />
    </bean>
    -->

    <!--<bean id="transactionPointcut" class="aop.NameMatchClassMethodPointcut">
        <property name="mappedClassName" value="*ServiceImpl" />
&lt;!&ndash;        <property name="mappedClassName" value="*NotServiceImpl" />&ndash;&gt;
        <property name="mappedName" value="upgrade*" />
    </bean>-->
    <!--
    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" />
    </bean>


    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice" />
        <property name="pointcut" ref="transactionPointcut" />
    </bean>
    -->
    <!--
    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userServiceImpl" />
        <property name="interceptorNames" >
            <list>
                <value>transactionAdvisor</value>
            </list>
        </property>
    </bean>
    -->
    <aop:config>
        <!--
        <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.upgrade*(..))" />
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut" />
          -->
        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* *..*ServiceImpl.upgrade*(..))" />
    </aop:config>


    <bean id="userService" class="service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSender" ref="mailSender" />
    </bean>
    <bean id="testUserService" class="test.UserServiceTest$TestUserService" parent="userService" />
    <bean id="mailSender" class="service.DummyMailSender" />

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="userDao" class="dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:tcp://localhost/~/toby" />
        <property name="username" value="sa" />
    </bean>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
</beans>