<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd"
>

  <bean id="connectionMaker" class="connectionMaker.DConnectionMaker"/>

  <aop:config>
    <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
  </aop:config>
  <tx:advice id="transactionAdvice">
    <tx:attributes>
      <tx:method name="get*" read-only="true"/>
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>
  <tx:annotation-driven/>
  <context:annotation-config/>
  <bean id="userService" class="service.UserServiceImpl">
    <property name="userDao" ref="userDao"/>
    <property name="mailSender" ref="mailSender"/>
  </bean>
  <bean id="testUserService" class="test.UserServiceTest$TestUserService" parent="userService"/>
  <bean id="mailSender" class="service.DummyMailSender"/>

  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <!--<bean id="userDao" class="dao.UserDaoJdbc">
    <property name="dataSource" ref="dataSource"/>
    <property name="sqlAdd"
      value="insert into users(id, name, password, level, login, recommend, email) values(?, ?, ?, ?, ?, ?, ?)"/>
  </bean>-->
  <!--
  <bean id="userDao" class="dao.UserDaoJdbc">
    <property name="dataSource" ref="dataSource"/>
    <property name="sqlMap">
      <map>
        <entry key="add" value="insert into users(id, name, password, level, login, recommend, email) values(?, ?, ?, ?, ?, ?, ?)" />
        <entry key="get" value="select * from users where id = ?" />
        <entry key="getAll" value="select * from users order by id" />
        <entry key="deleteAll" value="delete from users" />
        <entry key="getCount" value="select count(*) from users" />
        <entry key="update" value="update users set name = ?, password = ?, level = ?, login = ?, recommend = ?, email = ? where id = ?" />
      </map>
    </property>
  </bean>-->

  <!-- <bean id="sqlService" class="sqlservice.SimpleSqlService">
     <property name="sqlMap">
       <map>
         <entry key="userAdd"
           value="insert into users(id, name, password, level, login, recommend, email) values(?, ?, ?, ?, ?, ?, ?)"/>
         <entry key="userGet" value="select * from users where id = ?"/>
         <entry key="userGetAll" value="select * from users order by id"/>
         <entry key="userDeleteAll" value="delete from users"/>
         <entry key="userGetCount" value="select count(*) from users"/>
         <entry key="userUpdate"
           value="update users set name = ?, password = ?, level = ?, login = ?, recommend = ?, email = ? where id = ?"/>
       </map>
     </property>
   </bean>-->
  <!--
  <bean id="sqlService" class="sqlservice.XmlSqlService">
    <property name="sqlReader" ref="sqlService" />
    <property name="sqlRegistry" ref="sqlService" />
    <property name="sqlmapFile" value="sqlmap.xml" />
  </bean>
  !-->
  <!--
  <bean id="sqlService" class="sqlservice.BaseSqlService">
    <property name="sqlReader" ref="sqlService" />
    <property name="sqlRegistry" ref="sqlService" />
  </bean>
  <bean id="sqlReader" class="sqlservice.JaxbXmlSqlReader">
    <property name="sqlmapFile" value="sqlMap.xml" />
  </bean>
  <bean id="sqlRegistry" class="sqlservice.HashMapSqlRegistry" />
  <bean id="userDao" class="dao.UserDaoJdbc">
    <property name="dataSource" ref="dataSource"/>
    <property name="sqlService" ref="sqlService" />
  </bean>
  -->
  <!--
  <bean id="sqlService" class="sqlservice.DefaultSqlService" />
  -->

  <bean id="sqlService" class="sqlservice.OxmSqlService">
    <property name="unmarshaller" ref="unmarshaller"/>
    <!--<property name="sqlmap" value="classpath:dao/sqlmap.xml" /> -->
    <property name="sqlRegistry" ref="sqlRegistry"/>
  </bean>

  <bean id="unmarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
    <property name="mappingLocation" value="/sqlservice/castor/mapping.xml"/>
  </bean>

  <!--<bean id="sqlRegistry" class="sqlservice.updatable.ConcurrentHashMapSqlRegistry" /> -->
  <bean id="sqlRegistry" class="sqlservice.updatable.EmbeddedDbSqlRegistry" >
    <property name="dataSource" ref="embeddedDatabase" />
  </bean>

  <bean id="userDao" class="dao.UserDaoJdbc">
    <property name="dataSource" ref="dataSource"/>
    <property name="sqlService" ref="sqlService"/>
  </bean>

  <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
    <property name="driverClass" value="org.h2.Driver"/>
    <property name="url" value="jdbc:h2:tcp://localhost/~/toby"/>
    <property name="username" value="sa"/>
  </bean>

  <jdbc:embedded-database id="embeddedDatabase" type="H2">
    <jdbc:script location="classpath:/sqlRegistrySchema.sql"/>
  </jdbc:embedded-database>

  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
</beans>